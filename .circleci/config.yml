# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build:
    docker:
        - image: circleci/python:3.6.2
      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    steps:
      - checkout
      - setup_remote_docker

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}
        
      # setup
      - run:
          name: circleci-setup
          command: |
            docker create -v /usr/src/app -v /usr/src/app/.venv -v /usr/src/app/frontend_build/node_modules --name holder python:3.6.2
            docker cp . holder:/usr/src/app
            docker start holder
      # run tests!
      - run:
          name: run tests
          environment:
            COMPOSE_FILE: docker-compose-circle.yml
          command: |
            docker-compose run flake8 atf_eregs
            docker-compose run py.test atf_eregs/tests
      - run:
          name: smoke test for building the frontend
          environment:
            COMPOSE_FILE: docker-compose-circle.yml
          command: ./devops/compile_frontend.sh build-dist

      - store_artifacts:
          path: test-reports
          destination: test-reports
          
      - deploy:
          command: |
            docker cp holder:/usr/src/app/compiled/. ./compiled
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              export CF_USERNAME=$CF_USERNAME_DEV
              export CF_PASSWORD=$CF_PASSWORD_DEV
              ./devops/circle-deploy.sh dev
            elif [ "${CIRCLE_BRANCH}" == "release" ]; then
              export CF_USERNAME=$CF_USERNAME_PROD
              export CF_PASSWORD=$CF_PASSWORD_PROD
              ./devops/circle-deploy.sh prod
            fi
