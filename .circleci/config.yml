# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build:
    docker:
        - image: circleci/python:3.6.5
      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    steps:
      - checkout
      - setup_remote_docker

      - run:
          name: Setup "holder" container for file storage
          command: |
            docker create -v /usr/src/app -w /usr/src/app/ --name holder python:3.6.5 sleep 100d
            docker cp . holder:/usr/src/app
            docker start holder
      - run:
          name: Generate circle-specific docker configs
          command: |
            docker exec holder pip install pyyaml
            docker exec holder python ./devops/transform_circle.py docker-compose.yml holder > docker-compose-circle.yml
            docker exec holder python ./devops/transform_circle.py eregs_extensions/docker-compose.yml holder > eregs_extensions/docker-compose-circle.yml

      - run:
          name: Webapp bandit
          environment:
            COMPOSE_FILE: docker-compose-circle.yml
          command: docker-compose run bandit -r atf_eregs -x tests
      - run:
          name: Webapp flake8
          environment:
            COMPOSE_FILE: docker-compose-circle.yml
          command: docker-compose run flake8
      - run:
          name: Webapp py.test
          environment:
            COMPOSE_FILE: docker-compose-circle.yml
          command: docker-compose run py.test
      - run:
          name: Build frontend
          environment:
            COMPOSE_FILE: docker-compose-circle.yml
          command: |
            ./devops/compile_frontend.sh build-dist
            docker cp holder:/usr/src/app/compiled/. ./compiled

      - run:
          name: Setup for parser tests
          working_directory: ~/repo/eregs_extensions
          command: |
            docker exec holder bash -c "rm -r /usr/src/app/*"   # bash for glob
            docker cp . holder:/usr/src/app/
      - run:
          name: Parser bandit
          working_directory: ~/repo/eregs_extensions
          environment:
            COMPOSE_FILE: docker-compose-circle.yml
          command: docker-compose run bandit -r atf_regparser -x tests
      - run:
          name: Parser flake8
          working_directory: ~/repo/eregs_extensions
          environment:
            COMPOSE_FILE: docker-compose-circle.yml
          command: docker-compose run flake8
      - run:
          name: Parser py.test
          working_directory: ~/repo/eregs_extensions
          environment:
            COMPOSE_FILE: docker-compose-circle.yml
          command: docker-compose run py.test
          
      - deploy:
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              export CF_USERNAME=$CF_USERNAME_DEV
              export CF_PASSWORD=$CF_PASSWORD_DEV
              ./devops/circle-deploy.sh dev
            elif [ "${CIRCLE_BRANCH}" == "release" ]; then
              export CF_USERNAME=$CF_USERNAME_PROD
              export CF_PASSWORD=$CF_PASSWORD_PROD
              ./devops/circle-deploy.sh prod
            fi
